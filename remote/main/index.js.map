{"version":3,"sources":["../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/CameraComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/CoinComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/UI/file:/D:/NewGame/TestPlayble/assets/scripts/UI/DownloadComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/UI/file:/D:/NewGame/TestPlayble/assets/scripts/UI/FailWindowComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/FanComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/event/file:/D:/NewGame/TestPlayble/assets/scripts/event/GameEvent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/event/file:/D:/NewGame/TestPlayble/assets/scripts/event/GameEventName.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/HandleComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/MachineComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/RoadBlockComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/UI/file:/D:/NewGame/TestPlayble/assets/scripts/UI/ScoreComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/t.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/TrapBlockComponent.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/url/file:/D:/NewGame/TestPlayble/assets/scripts/url/URL.ts","../../file:/D:/NewGame/TestPlayble/assets/scripts/file:/D:/NewGame/TestPlayble/assets/scripts/WheelComponent.ts"],"names":["ccclass","_decorator","property","Node","args","_this","_initializerDefineProperty","previousTargetPosition","isCrash","_inheritsLoose","_proto","start","this","target","position","clone","GameEvent","on","onCrash","update","deltaTime","node","worldPosition","x","y","z","deltaX","newPosition","Vec3","Component","configurable","enumerable","writable","initializer","CCFloat","startRotation","rotation","getEulerAngles","dt","speed","setRotationFromEuler","requireComponent","UIOpacity","opacity","getComponent","hide","scheduleOnce","tween","_this2","to","hideSpeed","delay","onDownload","sys","openURL","URL","url","bigScale","cross","scale","ZERO","active","showCross","showTryButton","opacityTween","speedCrossOpacity","quat","Quat","fromEuler","rotationTween","speedCrossRotation","scaleTween","speedCrossScale","ONE","parallel","retryButton","speedretryOpacity","repeatTween","speedretryScale","call","_this3","repeatForever","rotate","particle","event","callback","thisArg","once","_event","off","emit","arg0","arg1","EventTarget","GameEventName","Animation","UITransform","_isTutorHandleComplete","_previousPosition","_handleSpeed","_diapazon","handle","maxY","minY","EventType","TOUCH_START","mouseClickStart","TOUCH_MOVE","mouseClickMove","TOUCH_END","mouseClickEnd","TOUCH_CANCEL","tutorHandAnimation","play","stop","pos","getUILocation","nodePos","hadleTransform","convertToNodeSpaceAR","math","clamp","convertToWorldSpaceAR","setWorldPosition","_createClass","key","get","HandleComponent","Collider","wheels","partsRB","fan","getComponentsInChildren","RigidBody","push","getComponentInChildren","FanComponent","onDisableRB","WheelComponent","bodyCollider","onCoinCollect","newPos","handleCpmponent","handleSpeed","forEach","wheel","rotateWheel","part","enabled","useGravity","linearFactor","Math","random","name","includes","otherCollider","collider","rb","collisionEnd","type","ERigidBodyType","DYNAMIC","Label","coinText","coinQuantity","updateLabel","onCollectCoin","string","toString","getRotation","w","collisionStart","_url","encodeURI"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Node, Vec3 } from 'cc';\r\nimport { GameEvent } from './event/GameEvent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CameraComponent')\r\nexport class CameraComponent extends Component {\r\n    @property(Node)\r\n    readonly target: Node\r\n\r\n    private previousTargetPosition: Vec3\r\n\r\n    private isCrash: boolean = false\r\n\r\n    protected start() {\r\n        this.previousTargetPosition = this.target.position.clone()\r\n\r\n        GameEvent.on(\"CRASH\", this.onCrash, this)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this.isCrash) return\r\n\r\n        const { x, y, z } = this.node.worldPosition\r\n        let deltaX = this.target.position.x - this.previousTargetPosition.x\r\n\r\n        let newPosition = new Vec3(x + deltaX, y, z)\r\n        this.node.worldPosition = newPosition\r\n\r\n        this.previousTargetPosition = this.target.position.clone()\r\n    }\r\n\r\n    private onCrash() {\r\n        this.isCrash = true\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCFloat, Component, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CoinComponent')\r\nexport class CoinComponent extends Component {\r\n    @property(CCFloat)\r\n    readonly speed: number = 8\r\n\r\n    private startRotation = new Vec3();\r\n\r\n    protected start() {\r\n        this.startRotation = new Vec3();\r\n        this.node.rotation.getEulerAngles(this.startRotation);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this.startRotation.y += this.speed\r\n        this.node.setRotationFromEuler(this.startRotation)\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCFloat, Component, sys, tween, UIOpacity } from 'cc';\r\nimport { GameEvent } from '../event/GameEvent';\r\nimport { URL } from '../url/URL';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n\r\n@ccclass('DownloadComponent')\r\n@requireComponent(UIOpacity)\r\nexport class DownloadComponent extends Component {\r\n    @property(CCFloat)\r\n    readonly delay: number = 1\r\n\r\n    @property(CCFloat)\r\n    readonly hideSpeed: number = 0.5\r\n\r\n    private opacity: UIOpacity\r\n\r\n    protected start() {\r\n        this.opacity = this.node.getComponent(UIOpacity)\r\n\r\n        GameEvent.on(\"CRASH\", this.hide, this)\r\n    }\r\n\r\n    private hide() {\r\n        this.scheduleOnce(() => {\r\n            tween(this.opacity).to(this.hideSpeed, { opacity: 1 }).start()\r\n        }, this.delay)\r\n    }\r\n\r\n    // EDITOR\r\n    private onDownload() {\r\n        sys.openURL(URL.url)\r\n    }\r\n}","import { _decorator, CCFloat, Component, Quat, sys, tween, UIOpacity, Vec3 } from 'cc';\r\nimport { GameEvent } from '../event/GameEvent';\r\nimport { URL } from '../url/URL';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst DELAY: number = 2\r\n@ccclass('FailWindowComponent')\r\nexport class FailWindowComponent extends Component {\r\n    @property(UIOpacity)\r\n    readonly cross: UIOpacity\r\n\r\n    @property(CCFloat)\r\n    readonly speedCrossRotation: number = 1\r\n\r\n    @property(CCFloat)\r\n    readonly speedCrossScale: number = 1\r\n\r\n    @property(CCFloat)\r\n    readonly speedCrossOpacity: number = 1\r\n\r\n    @property(UIOpacity)\r\n    readonly retryButton: UIOpacity\r\n\r\n\r\n    @property(CCFloat)\r\n    readonly speedretryScale: number = 1\r\n\r\n    @property(CCFloat)\r\n    readonly speedretryOpacity: number = 1\r\n\r\n    private bigScale: Vec3 = new Vec3(1.2, 1.2, 1.2)\r\n\r\n    protected start(): void {\r\n        this.cross.opacity = 1\r\n        this.cross.node.scale = Vec3.ZERO\r\n\r\n        this.node.active = false\r\n\r\n        GameEvent.on('CRASH', this.showCross, this)\r\n        GameEvent.on('CRASH', this.showTryButton, this)\r\n    }\r\n\r\n    private showCross() {\r\n\r\n        let opacityTween = tween(this.cross).to(1 / this.speedCrossOpacity, { opacity: 255 })\r\n\r\n        let quat: Quat = new Quat;\r\n        Quat.fromEuler(quat, 0, 0, 179);\r\n        let rotationTween = tween(this.cross.node).to(1 / this.speedCrossRotation, { rotation: quat })\r\n\r\n        let scaleTween = tween(this.cross.node).to(1 / this.speedCrossScale, { scale: Vec3.ONE })\r\n\r\n        this.scheduleOnce(() => {\r\n            this.node.active = true\r\n\r\n            opacityTween.start()\r\n            tween(this.cross.node).parallel(rotationTween, scaleTween).start()\r\n        }, DELAY)\r\n    }\r\n\r\n    private showTryButton() {\r\n        let opacityTween = tween(this.retryButton).to(1 / this.speedretryOpacity, { opacity: 255 })\r\n\r\n        let repeatTween = tween(this.retryButton.node)\r\n            .to(this.speedretryScale, { scale: this.bigScale })\r\n            .to(this.speedretryScale, { scale: Vec3.ONE })\r\n            .delay(DELAY)\r\n\r\n        let scaleTween = tween(this.retryButton.node).to(1 / this.speedretryScale, { scale: Vec3.ONE })\r\n            .call(() => { tween(this.retryButton.node).repeatForever(repeatTween).start() })\r\n\r\n        this.scheduleOnce(() => {\r\n            opacityTween.start()\r\n            scaleTween.start()\r\n        }, DELAY)\r\n    }\r\n\r\n    // EDITOR\r\n    private onDownload() {\r\n        sys.openURL(URL.url)\r\n    }\r\n}","import { _decorator, Component, Node, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FanComponent')\r\nexport class FanComponent extends Component {\r\n    @property(Node)\r\n    readonly particle: Node\r\n\r\n    private startRotation = new Vec3();\r\n\r\n\r\n    protected start() {\r\n        this.startRotation = new Vec3();\r\n        this.node.rotation.getEulerAngles(this.startRotation);\r\n    }\r\n\r\n    public rotate(speed: number) {\r\n        this.particle.active = !(speed == 0)\r\n\r\n        this.startRotation.x += 9 * speed\r\n        this.node.setRotationFromEuler(this.startRotation)\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, EventTarget } from 'cc';\r\nimport { GameEventName } from './GameEventName';\r\nconst { ccclass } = _decorator;\r\n// класс для работы с событиями\r\n@ccclass('GameEvent')\r\nexport abstract class GameEvent {\r\n  private static _event = new EventTarget();\r\n\r\n  public static on(event: keyof typeof GameEventName, callback: (...any: any[]) => void, thisArg?: any, once?: boolean) {\r\n    this._event.on(event, callback, thisArg, once);\r\n  }\r\n\r\n  public static once(event: keyof typeof GameEventName, callback: (...any: any[]) => void, thisArg?: any) {\r\n    this._event.once(event, callback, thisArg);\r\n  }\r\n\r\n  public static off(event: keyof typeof GameEventName, callback?: (...any: any[]) => void, thisArg?: any): void {\r\n    this._event.off(event, callback, thisArg);\r\n  }\r\n\r\n  public static emit(event: keyof typeof GameEventName, arg0?: any, arg1?: any) {\r\n    this._event.emit(event, arg0, arg1);\r\n  }\r\n}","// Имена игровых событий\r\nexport enum GameEventName {\r\n  CRASH,\r\n  COIN_COLLECT,\r\n\r\n  GAME_OVER\r\n}\r\n","import { _decorator, Animation, CCFloat, Component, EventTouch, math, Node, tween, UITransform, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HandleComponent')\r\nexport class HandleComponent extends Component {\r\n    @property(CCFloat)\r\n    readonly minY: number = -106\r\n\r\n    @property(CCFloat)\r\n    readonly maxY: number = 106\r\n\r\n    @property(Node)\r\n    readonly handle: Node\r\n\r\n    @property(Animation)\r\n    readonly tutorHandAnimation: Animation\r\n\r\n    @property(UITransform)\r\n    readonly hadleTransform: UITransform\r\n\r\n    private _isTutorHandleComplete: boolean = false\r\n    private _previousPosition: Vec3 = new Vec3()\r\n\r\n    private _handleSpeed: number = 0\r\n    private _diapazon: number\r\n\r\n    protected start() {\r\n        if (!this.handle) {\r\n            throw (\"handle is null\")\r\n        }\r\n\r\n        this._diapazon = this.maxY - this.minY\r\n\r\n        this._previousPosition = this.handle.worldPosition.clone()\r\n\r\n        this.handle.on(Node.EventType.TOUCH_START, this.mouseClickStart, this);\r\n        this.handle.on(Node.EventType.TOUCH_MOVE, this.mouseClickMove, this);\r\n        this.handle.on(Node.EventType.TOUCH_END, this.mouseClickEnd, this);\r\n        this.handle.on(Node.EventType.TOUCH_CANCEL, this.mouseClickEnd, this);\r\n    }\r\n\r\n    public get handleSpeed(): number {\r\n        return this._handleSpeed\r\n    }\r\n\r\n    private mouseClickStart(event: EventTouch) {\r\n        if (!this._isTutorHandleComplete) {\r\n            this._isTutorHandleComplete = true\r\n\r\n            if (this.tutorHandAnimation) {\r\n                this.tutorHandAnimation.play()\r\n\r\n                this.scheduleOnce(() => {\r\n                    this.tutorHandAnimation.stop()\r\n                })\r\n            }\r\n        }\r\n\r\n        if (this.node.worldPosition != this._previousPosition)\r\n            tween(this.handle).to(0.1, { worldPosition: this._previousPosition })\r\n    }\r\n\r\n    private mouseClickMove(event: EventTouch) {\r\n        const { x, z } = this.handle.position\r\n\r\n        let pos = new Vec3(event.getUILocation().x, event.getUILocation().y, z);\r\n        let nodePos = this.hadleTransform.convertToNodeSpaceAR(pos);\r\n\r\n        nodePos.x = x\r\n        nodePos.y = math.clamp(nodePos.y, this.minY, this.maxY)\r\n\r\n        this._handleSpeed = (nodePos.y - this.minY) / this._diapazon\r\n        let worldPosition = this.hadleTransform.convertToWorldSpaceAR(nodePos);\r\n\r\n        this.handle.setWorldPosition(worldPosition);\r\n    }\r\n\r\n    private mouseClickEnd(event: EventTouch) {\r\n        this._previousPosition = this.handle.worldPosition.clone()\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCFloat, Collider, Component, RigidBody, Vec3 } from 'cc';\r\nimport { GameEvent } from './event/GameEvent';\r\nimport { FanComponent } from './FanComponent';\r\nimport { HandleComponent } from './HandleComponent';\r\nimport { WheelComponent } from './WheelComponent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MachineComponent')\r\nexport class MachineComponent extends Component {\r\n    @property(HandleComponent)\r\n    readonly handleCpmponent: HandleComponent\r\n\r\n\r\n    @property(CCFloat)\r\n    private speed: number = 25\r\n\r\n    @property(Collider)\r\n    readonly bodyCollider: Collider\r\n\r\n    private wheels: WheelComponent[] = []\r\n    private partsRB: RigidBody[] = []\r\n    private fan: FanComponent;\r\n\r\n\r\n    protected start(): void {\r\n        this.partsRB = this.node.getComponentsInChildren(RigidBody)\r\n        this.partsRB.push(this.node.getComponent(RigidBody))\r\n        this.fan = this.node.getComponentInChildren(FanComponent)\r\n\r\n        this.onDisableRB()\r\n\r\n        this.wheels = this.node.getComponentsInChildren(WheelComponent)\r\n\r\n        GameEvent.on(\"CRASH\", this.onCrash, this)\r\n\r\n        this.bodyCollider.on(\"onTriggerEnter\", this.onCoinCollect, this)\r\n    }\r\n\r\n    protected update(deltaTime: number) {\r\n        let newPos = this.node.position.clone()\r\n        newPos.x += this.speed * this.handleCpmponent.handleSpeed * deltaTime\r\n\r\n        this.node.position = newPos\r\n\r\n        this.wheels.forEach(wheel => {\r\n            wheel.rotateWheel(this.handleCpmponent.handleSpeed)\r\n        })\r\n\r\n        this.fan.rotate(this.handleCpmponent.handleSpeed)\r\n    }\r\n\r\n    private onCrash() {\r\n        const mulltiplicator = 4\r\n        this.partsRB.forEach(part => {\r\n            part.enabled = true\r\n            part.useGravity = true\r\n            part.linearFactor = new Vec3(Math.random() * mulltiplicator,\r\n                Math.random() * mulltiplicator, Math.random() * mulltiplicator)\r\n        })\r\n\r\n        this.handleCpmponent.node.active = false\r\n    }\r\n\r\n    private onDisableRB() {\r\n        this.partsRB.forEach(part => {\r\n            if (part.name.includes(\"wheel\")) return\r\n\r\n            part.enabled = false\r\n        })\r\n    }\r\n\r\n    private onCoinCollect(event) {\r\n        if (event.otherCollider.node.name.includes(\"Coin\")) {\r\n            event.otherCollider.node.active = false\r\n\r\n            GameEvent.emit(\"COIN_COLLECT\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Collider, Component, ERigidBodyType, RigidBody } from 'cc';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('RoadBlockComponent')\r\n@requireComponent(Collider)\r\n@requireComponent(RigidBody)\r\nexport class RoadBlockComponent extends Component {\r\n    private collider: Collider\r\n    private rb: RigidBody\r\n\r\n    protected start() {\r\n        this.collider = this.node.getComponent(Collider)\r\n        this.rb = this.node.getComponent(RigidBody)\r\n\r\n        if (this.collider) {\r\n            this.collider.on(\"onCollisionExit\", this.collisionEnd, this)\r\n        }\r\n\r\n    }\r\n\r\n    private collisionEnd(event) {\r\n        if (event.otherCollider.node.name == \"wheel_back\") {\r\n            this.rb.type = ERigidBodyType.DYNAMIC\r\n        }\r\n    }\r\n}","import { _decorator, Component, Label } from 'cc';\r\nimport { GameEvent } from '../event/GameEvent';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('ScoreComponent')\r\n@requireComponent(Label)\r\nexport class ScoreComponent extends Component {\r\n    private coinText: Label\r\n\r\n    private coinQuantity: number = 0\r\n\r\n    protected start() {\r\n        this.coinText = this.node.getComponent(Label)\r\n\r\n        this.updateLabel()\r\n\r\n        GameEvent.on(\"COIN_COLLECT\", this.onCollectCoin, this)\r\n    }\r\n\r\n    private onCollectCoin() {\r\n        this.coinQuantity++;\r\n        this.updateLabel()\r\n    }\r\n\r\n    private updateLabel() {\r\n        this.coinText.string = this.coinQuantity.toString()\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('t')\r\nexport class t extends Component {\r\n    private startRotation = new Vec3();\r\n\r\n    start() {\r\n        this.startRotation = new Vec3();\r\n        this.node.rotation.getEulerAngles(this.startRotation);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const { y, w } = this.node.getRotation()\r\n        this.startRotation.y += 5\r\n        this.node.setRotationFromEuler(this.startRotation)\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Collider, Component, ERigidBodyType, RigidBody } from 'cc';\r\nimport { GameEvent } from './event/GameEvent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TrapBlockComponent')\r\nexport class TrapBlockComponent extends Component {\r\n    private collider: Collider\r\n    private rb: RigidBody\r\n\r\n    protected start() {\r\n        this.collider = this.node.getComponent(Collider)\r\n        this.rb = this.node.getComponent(RigidBody)\r\n\r\n        if (this.collider) {\r\n            this.collider.on(\"onCollisionEnter\", this.collisionStart, this)\r\n        }\r\n\r\n    }\r\n\r\n    private collisionStart(event) {\r\n        if (event.otherCollider.node.name == \"wheel_front\") {\r\n            this.rb.type = ERigidBodyType.DYNAMIC\r\n\r\n            GameEvent.emit('CRASH')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\nconst DOWNLOAD_URL = 'https://play.google.com/store/apps/details?id=com.LuB.DeliveryConstruct&hl=ruw'\r\n\r\n@ccclass('URL')\r\nexport abstract class URL {\r\n\r\n    private static _url: string = encodeURI(DOWNLOAD_URL)\r\n\r\n    public static get url(): string {\r\n        return this._url\r\n    }\r\n}","import { _decorator, Component, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('WheelComponent')\r\nexport class WheelComponent extends Component {\r\n    private startRotation = new Vec3();\r\n\r\n    protected start() {\r\n        this.startRotation = new Vec3();\r\n        this.node.rotation.getEulerAngles(this.startRotation);\r\n    }\r\n\r\n    public rotateWheel(speed: number) {\r\n        this.startRotation.y += 5 * speed\r\n        this.node.setRotationFromEuler(this.startRotation)\r\n    }\r\n}\r\n\r\n\r\n"]}